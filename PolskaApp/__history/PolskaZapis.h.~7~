//---------------------------------------------------------------------------

#ifndef PolskaZapisH
#define PolskaZapisH
#include "Stack.h"
#include <vcl.h>
//---------------------------------------------------------------------------
#endif

using namespace std;

struct PolskaZapis
{
	String note;
	String polskNote;

	String convert()
	{
		List<char> symbol;

		for(int i = 1; i < note.Length(); i++)
		{
			if (note[i] == ' ')
			{
				note.Delete(i, 1);
			}
		}
		int check = 0,  f = 1;
		for (int i = 1; i <= note.Length(); i++)
		{
			int num = symbol.GetSize() - 1;
			if(isdigit(note[i]) || note[i] == ',')
			{
				polskNote.Insert(note[i],f);
				f++;
				check = 1;
			}
			else if (check == 1)
			{
				polskNote.Insert(" ",f);
				f++;
				check = 0;
				i--;
			}

			else if(note[i] == '+')
			{
				if (symbol.GetSize() == 0)
				{
					symbol.PushBack(note[i]);
				}
				else if (symbol[num] == '-' || symbol[num] == '+')
				{
					polskNote.Insert(symbol[num],f);
					symbol.PopFront();
					f++;
					symbol.PushBack(note[i]);
					polskNote.Insert(" ",f);
					f++;
				}
				else if (symbol[num] == '*' || symbol[num] == '/')
				{
					polskNote.Insert(symbol[num],f);
					symbol.PopFront();
					f++;
					polskNote.Insert(symbol[num],f);
					symbol.PopFront();
					f++;
					polskNote.Insert(" ",f);
					f++;
				}
			}

			else if(note[i] == '-')
			{
				if (symbol.GetSize() == 0)
				{
					symbol.PushBack(note[i]);
				}
				else if (symbol[num] == '-' || symbol[num] == '+')
				{
					polskNote.Insert(symbol[num],f);
					symbol.PopFront();
					f++;
					symbol.PushBack(note[i]);
					polskNote.Insert(" ",f);
					f++;
				}
				else if (symbol[num] == '*' || symbol[num] == '/')
				{
					polskNote.Insert(symbol[num],f);
					symbol.PopFront();
					f++;
					polskNote.Insert(note[i],f);
					f++;
					polskNote.Insert(" ",f);
					f++;
				}
			}

			else if(note[i] == '*')
			{
				if (symbol.GetSize() == 0)
				{
					symbol.PushBack(note[i]);
				}
				else if (symbol[num] == '-' || symbol[num] == '+')
				{
					symbol.PushBack(note[i]);
				}
				else if (symbol[num] == '*' || symbol[num] == '/')
				{
					polskNote.Insert(symbol[num],f);
					symbol.PopFront();
					f++;
					symbol.PushBack(note[i]);
					polskNote.Insert(" ",f);
					f++;
				}
			}

			else if(note[i] == '/')
			{
				if (symbol.GetSize() == 0)
				{
					symbol.PushBack(note[i]);
				}
				else if (symbol[num] == '-' || symbol[num] == '+')
				{
					symbol.PushBack(note[i]);
				}
				else if (symbol[num] == '*' || symbol[num] == '/')
				{
					polskNote.Insert(symbol[num],f);
					symbol.PopFront();
					f++;
					symbol.PushBack(note[i]);
					polskNote.Insert(" ",f);
					f++;
				}
			}
		}
		int j = symbol.GetSize() - 1;
		while (symbol.GetSize()!=0)
		{
			polskNote.Insert(symbol[j],f);
			f++;
			symbol.PopFront();
		}
		return polskNote;
	}
};